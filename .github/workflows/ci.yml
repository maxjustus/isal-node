name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: aarch64-apple-darwin
            
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            
          # Skip aarch64-linux for CI to save time - cross-compilation testing is covered in build.yml

    name: Test on ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies (macOS)
        if: matrix.settings.host == 'macos-latest'
        run: brew install autoconf automake libtool nasm yasm
      
      - name: Install system dependencies (Ubuntu)
        if: matrix.settings.host == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential autoconf automake libtool nasm yasm -y
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.settings.target }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build native module
        run: npm run build
        env:
          RUSTFLAGS: '-C target-feature=-crt-static'
      
      - name: Run tests
        run: npm run test:all
      
      - name: Run benchmarks
        run: |
          echo "## Benchmark Results for ${{ matrix.settings.target }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npm run benchmark:quick 2>&1 | tee benchmark_output.txt
          cat benchmark_output.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.settings.target }}
          path: benchmark_output.txt
          retention-days: 30

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential autoconf automake libtool nasm yasm -y
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check Rust formatting
        run: cargo fmt --check
      
      - name: Run Rust lints
        run: cargo clippy -- -D warnings
      
      - name: Build for linting
        run: npm run build
        env:
          RUSTFLAGS: '-C target-feature=-crt-static'